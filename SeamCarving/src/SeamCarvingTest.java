package SeamCarving.src;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.Arrays;

public class SeamCarvingTest {

    @Test
    public void TestOne() {
        int[][] disruption = {
            {1, 2, 0, 3},
            {1, 2, 3, 0},
            {1, 2, 3, 0},
            {1, 2, 0, 3}
        };
        int[] ans = {2, 3, 3, 2};

        assertTrue(Arrays.equals(SeamCarving.carve_seam(disruption), ans));
    }

    @Test
    public void TestTwo() {
        int[][] disruption = {
                {1020, 360, 510, 806, 1020, 0, 0, 1020, 806, 1081},
                {1020, 806, 510, 0, 1140, 360, 0, 806, 721, 360},
                {1020, 1020, 0, 806, 806, 806, 510, 721, 721, 806},
                {806, 1081, 806, 806, 360, 806, 360, 360, 510, 510},
                {806, 0, 721, 0, 360, 510, 806, 360, 360, 806},
                {806, 721, 721, 360, 806, 721, 510, 360, 360, 360},
                {510, 360, 721, 360, 1020, 360, 806, 0, 360, 360},
                {510, 360, 721, 0, 1081, 806, 0, 360, 0, 721},
                {806, 721, 806, 510, 510, 806, 360, 806, 360, 1020},
                {1020, 360, 1140, 360, 806, 1140, 510, 1140, 806, 1020}
        };
        int[] ans = {6, 6, 6, 6, 7, 7, 7, 6, 6, 6};

        assertTrue(Arrays.equals(SeamCarving.carve_seam(disruption), ans));
    }

    @Test
    public void TestThree() {
        int[][] disruption =
                {{1081, 360, 806, 1140, 806, 360, 806, 1020, 1020, 1020, 806, 510, 510, 806, 806, 1081}, {510, 360, 806, 721, 510, 1140, 806, 360, 360, 806, 1140, 721, 0, 510, 806, 360}, {1081, 510, 510, 510, 1081, 806, 510, 721, 721, 721, 360, 806, 806, 1140, 806, 360}, {721, 721, 1020, 1081, 510, 510, 806, 510, 510, 360, 806, 510, 806, 360, 510, 510}, {0, 0, 0, 510, 360, 510, 360, 806, 806, 360, 721, 721, 806, 0, 510, 510}, {721, 721, 806, 721, 721, 510, 510, 806, 1020, 510, 510, 360, 806, 1020, 1140, 1140}, {721, 806, 360, 510, 510, 0, 360, 721, 806, 360, 1081, 806, 360, 360, 721, 360}, {0, 510, 0, 806, 806, 1020, 806, 721, 721, 510, 1140, 360, 510, 360, 721, 360}, {806, 721, 510, 806, 0, 0, 360, 721, 721, 510, 806, 360, 721, 510, 806, 1140}, {510, 360, 510, 721, 360, 0, 360, 721, 360, 360, 721, 0, 721, 806, 360, 806}, {360, 510, 510, 360, 360, 360, 0, 510, 360, 721, 806, 510, 360, 721, 721, 806}, {360, 510, 510, 510, 360, 510, 0, 806, 806, 510, 721, 806, 360, 360, 721, 360}, {806, 360, 806, 510, 0, 360, 360, 510, 360, 360, 510, 510, 806, 360, 721, 360}, {0, 510, 510, 0, 360, 806, 806, 360, 360, 510, 806, 0, 806, 721, 0, 806}, {0, 360, 806, 360, 510, 721, 510, 360, 360, 360, 510, 360, 721, 721, 721, 360}, {0, 0, 1020, 360, 1140, 360, 1020, 0, 806, 806, 1081, 806, 806, 360, 360, 806}}
        ;
        int[] ans = {6, 6, 6, 6, 7, 7, 7, 6, 6, 6};

        assertTrue(Arrays.equals(SeamCarving.carve_seam(disruption), ans));
    }
}